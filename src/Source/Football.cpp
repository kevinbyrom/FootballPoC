#include <windows.h>
#include "Football.h"
#include "BeginGameStage.h"
#include "CheckTimeStage.h"
#include "CoinTossStage.h"
#include "EndGameStage.h"
#include "FirstDownStage.h"
#include "HalfTimeStage.h"
#include "PlayStage.h"
#include "SelectGameModeStage.h"
#include "SelectInputStage.h"
#include "SelectPlayStage.h"
#include "SelectTeamStage.h"
#include "TitleScreenStage.h"
#include "TouchdownStage.h"
#include "TurnOverStage.h"


FOOTBALL		MainGame;

GAME_INFO		GameInfo;
DOWN_INFO		DownInfo;

SPRITE			FieldSpr;
SPRITE			BallSpr;
SPRITE			IconSpr;
SPRITE			PlayerSpr[NUM_SIDES];
SPRITE			Font;

TILE_MAP		FieldMap;

TEAM			Team[NUM_SIDES];

PLAYBOOK		Playbook[NUM_SIDES];
PLAY			CurrentPlay[NUM_SIDES];
SIDE			Side[NUM_SIDES];

OBJECT			Camera;
BALL			Ball;

DISPLAY_LIST	ObjectDList;
DISPLAY_LIST	ShadowDList;

VPAD			VPad[NUM_SIDES];

MESSAGE_MGR		MsgMgr;

STRING			strGameDir;


///////////////////
// STAGE GLOBALS //
///////////////////


BEGIN_GAME_STAGE		BeginGameStage;
CHECK_TIME_STAGE		CheckTimeStage;
COIN_TOSS_STAGE			CoinTossStage;
END_GAME_STAGE			EndGameStage;
FIRST_DOWN_STAGE		FirstDownStage;
HALF_TIME_STAGE			HalfTimeStage;
PLAY_STAGE				PlayStage;
SELECT_GAME_MODE_STAGE	SelectGameModeStage;
SELECT_INPUT_STAGE		SelectInputStage;
SELECT_PLAY_STAGE		SelectPlayStage;
SELECT_TEAM_STAGE		SelectTeamStage;
TITLE_SCREEN_STAGE		TitleScreenStage;
TOUCHDOWN_STAGE			TouchdownStage;
TURNOVER_STAGE			TurnOverStage;



							//  -ENDZONE-			           -0 TO 10-					   -10 TO 20-					   -20 TO 30-					   -30 TO 40-					   -40 TO 50-		                -50 TO 40-                       -40 TO 30-                       -30 TO 20-                       -20 TO 10-                       -10 TO 0-                       -ENDZONE-
unsigned char fieldtiles[] = {	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
								5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
								5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
								5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,   5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
								4, 4, 4, 4, 4, 4, 4, 4, 4, 4,   4, 4, 4, 4, 4, 4, 4, 4, 4, 4,   4, 4, 4, 4, 4, 4, 4, 4, 4, 4,   4, 4, 4, 4, 4, 4, 4, 4, 4, 4,   4, 4, 4, 4, 4, 4, 4, 4, 4, 4,   4, 4, 4, 4, 4, 4, 4, 4, 4, 4,    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,   4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
								3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
								3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
								3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,   3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
								2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
								1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1, 1, 1, 1, 1, 1, 1,    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,19,  24, 0, 0, 0,12,13, 0, 0, 0,20,  24, 0, 0, 0,12,13, 0, 0, 0,21,  24, 0, 0, 0,12,13, 0, 0, 0,22,  24, 0, 0, 0,12,13, 0, 0, 0,23,   24, 0, 0, 0,12,13, 0, 0, 0,22,   24, 0, 0, 0,12,13, 0, 0, 0,21,   24, 0, 0, 0,12,13, 0, 0, 0,20,   24, 0, 0, 0,12,13, 0, 0, 0,19,   24, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,  14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   14,15,15,15,16,14,15,15,15,16,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,  13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   13, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								7, 9, 9, 9, 9, 9, 9, 9, 9, 8,  13, 0, 0, 0,12,13, 0, 0, 0,19,  24, 0, 0, 0,12,13, 0, 0, 0,20,  24, 0, 0, 0,12,13, 0, 0, 0,21,  24, 0, 0, 0,12,13, 0, 0, 0,22,  24, 0, 0, 0,12,13, 0, 0, 0,23,   24, 0, 0, 0,12,13, 0, 0, 0,22,   24, 0, 0, 0,12,13, 0, 0, 0,21,   24, 0, 0, 0,12,13, 0, 0, 0,20,   24, 0, 0, 0,12,13, 0, 0, 0,19,   24, 0, 0, 0,12,13, 0, 0, 0,12,   7, 9, 9, 9, 9, 9, 9, 9, 9, 8,
								6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 6, 6, 6, 6, 6, 6, 6,    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,   6, 6, 6, 6, 6, 6, 6, 6, 6, 6};

void FOOTBALL::Opening()
	{
	int i;

	// Set the stage to the title stage //

	Input->InstallKeyboard();
	Input->InstallJoysticks();


	//Input->InstallJoystick(0, 
	
	for (i = 0; i < NUM_SIDES; i++)
		{
		VPad[i].Attach(Input);
		VPad[i].AssignJoystick(i);
		}

	VPad[0].AssignUp(DIK_UP, VPAD_NONE, VPAD_NONE);
	VPad[0].AssignDown(DIK_DOWN, VPAD_NONE, VPAD_NONE);
	VPad[0].AssignLeft(DIK_LEFT, VPAD_NONE, VPAD_NONE);
	VPad[0].AssignRight(DIK_RIGHT, VPAD_NONE, VPAD_NONE);
	VPad[0].AssignButton(0, DIK_A, VPAD_NONE, VPAD_NONE);
	VPad[0].AssignButton(1, DIK_S, VPAD_NONE, VPAD_NONE);
	/*VPad[0].AssignUp(DIK_UP, -50, 12);
	VPad[0].AssignDown(DIK_DOWN, 50, 14);
	VPad[0].AssignLeft(DIK_LEFT, -50, 15);
	VPad[0].AssignRight(DIK_RIGHT, 50, 13);
	VPad[0].AssignButton(0, DIK_A, VPAD_NONE, 2);
	VPad[0].AssignButton(1, DIK_S, VPAD_NONE, 3);*/
	VPad[0].AssignStart(DIK_RETURN, VPAD_NONE);

	VPad[1].AssignUp(DIK_I, VPAD_NONE, VPAD_NONE);
	VPad[1].AssignDown(DIK_K, VPAD_NONE, VPAD_NONE);
	VPad[1].AssignLeft(DIK_J, VPAD_NONE, VPAD_NONE);
	VPad[1].AssignRight(DIK_L, VPAD_NONE, VPAD_NONE);
	VPad[1].AssignButton(0, DIK_G, VPAD_NONE, VPAD_NONE);
	VPad[1].AssignButton(1, DIK_H, VPAD_NONE, VPAD_NONE);
	VPad[1].AssignStart(DIK_N, VPAD_NONE);

	Team[0].ControlledBy = 0;
	Team[1].ControlledBy = 1;

	LoadBallSprites();
	//LoadPlayerSprites();
	//LoadFieldSprites();
	LoadIconSprites();
	//LoadPlaybooks();


	FieldMap.Create(fieldtiles, 120, 30, 20, 20);
	FieldMap.SetSprite(&Team[HOME].FieldSpr);

	Screen->SetPalette(PlayerSpr[0].Pal, 0, 256);


	Ball.AddToDisplayList(&ObjectDList);


	// Set the game directory

	strGameDir = "C:\\GAME SOURCE\\NEW FOOTBALL\\";


	// Open the title screen stage

	OpenTitleScreenStage();
	}



void FOOTBALL::Closing()
	{
	//FieldSpr.Destroy();
	//PlayerSpr[0].Destroy();
	//PlayerSpr[1].Destroy();
	}




void FOOTBALL::SetupExhibitionGame()
	{
	// Load the teams //
	// Load the playbooks //
	// Load the player sprites //
	// Load the field sprites //
	}




void FOOTBALL::LoadBallSprites()
	{

	///////////////////////////////////
	//								 //
	// Used to load the ball sprites //
	//								 //
	///////////////////////////////////


	BallSpr.CreateFromBitmap(Screen, "BALL.BMP", 8, 8, 22, 22, 1, 255);
	Font.CreateFromBitmap(Screen, "FONT1.BMP", 18, 6, 11, 16, 1, 255);
	}





void FOOTBALL::LoadPlayerSprites()
	{

	///////////////////////////////////////////////////
	//												 //
	// Used to load the player sprites for the teams //
	//												 //
	///////////////////////////////////////////////////


	for (int i = 0; i < NUM_SIDES; i++)
		PlayerSpr[i].CreateFromBitmap(Screen, "PLAYERS 640.BMP"/*Team[i].PlayerSpriteFile*/, 16, 8, 44, 44, 1, 255);
	}




void FOOTBALL::LoadFieldSprites()
	{

	////////////////////////////////////////////
	//										  //
	// Used to load the sprites for the field //
	//										  //
	////////////////////////////////////////////


	FieldSpr.CreateFromBitmap(Screen, "SFFIELD.BMP"/*Team[HOME].FieldSpriteFile*/, 6, 7, 20, 20, 1, 255);
	}




void FOOTBALL::LoadIconSprites()
	{

	////////////////////////////////////////////
	//										  //
	// Used to load the sprites for the icons //
	//										  //
	////////////////////////////////////////////


	IconSpr.CreateFromBitmap(Screen, "ICONS.BMP", 8, 1, 11, 7, 1, 255);
	}




void FOOTBALL::LoadPlaybooks()
	{

	///////////////////////////////////////////////////
	//												 //
	// Used to load the playbooks based on the teams //
	// in the game									 //
	//												 //
	///////////////////////////////////////////////////


	//for (int i = 0; i < NUM_SIDES; i++)
	//	Playbook[i].Load("TEST.PBK");//Team[i].PlaybookFile);
	}



/////////////////////////////
// STAGE OPENING FUNCTIONS //
/////////////////////////////


void FOOTBALL::OpenBeginGameStage()			{ SetStage(&BeginGameStage); }
void FOOTBALL::OpenCoinTossStage()			{ SetStage(&CoinTossStage); }
void FOOTBALL::OpenCheckTimeStage()			{ SetStage(&CheckTimeStage); }
void FOOTBALL::OpenEndGameStage()			{ SetStage(&EndGameStage); }
void FOOTBALL::OpenFirstDownStage()			{ SetStage(&FirstDownStage); }
void FOOTBALL::OpenHalfTimeStage()			{ SetStage(&HalfTimeStage); }
void FOOTBALL::OpenPlayStage()				{ SetStage(&PlayStage); }
void FOOTBALL::OpenSelectGameModeStage()	{ SetStage(&SelectGameModeStage); }
void FOOTBALL::OpenSelectInputStage()		{ SetStage(&SelectInputStage); }
void FOOTBALL::OpenSelectPlayStage()		{ SetStage(&SelectPlayStage); }
void FOOTBALL::OpenSelectTeamStage()		{ SetStage(&SelectTeamStage); }
void FOOTBALL::OpenTitleScreenStage()		{ SetStage(&TitleScreenStage); }
void FOOTBALL::OpenTouchdownStage()			{ SetStage(&TouchdownStage); }
void FOOTBALL::OpenTurnOverStage()			{ SetStage(&TurnOverStage); }